{"version":3,"sources":["../server/routes.js"],"names":["routes","verifyToken","req","res","next","bearerHeader","headers","jwt","verify","process","env","SECRET_KEY","err","data","db","User","findById","user","then","status","json","message","catch","get"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAAS,wBAAf;;AAEA,SAASC,WAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAqC;AACjC;AACA,QAAMC,eAAeH,IAAII,OAAJ,CAAY,eAAZ,CAArB;AACA;AACA,QAAI,OAAOD,YAAP,KAAwB,WAA5B,EAAyC;AACrC;AACAE,+BAAIC,MAAJ,CAAWH,YAAX,EAAyBI,QAAQC,GAAR,CAAYC,UAArC,EAAiD,UAACC,GAAD,EAAMC,IAAN,EAAa;AAC1DC,6BAAGC,IAAH,CAAQC,QAAR,CAAiBH,KAAKI,IAAtB,EAA4BC,IAA5B,CAAiC,UAACD,IAAD,EAAQ;AACrC,oBAAIA,IAAJ,EAAU;AACNf,wBAAIe,IAAJ,GAAWJ,KAAKI,IAAhB;AACAb;AACH,iBAHD,MAGK;AACDD,wBAAIgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAED,QAAQ,KAAV,EAAiBE,SAAS,cAA1B,EAArB;AACH;AACJ,aAPD,EAOGC,KAPH,CAOS,UAACV,GAAD,EAAO;AACZ,oBAAIA,GAAJ,EAAS;AAAET,wBAAIgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAED,QAAQ,KAAV,EAAiBE,SAAS,cAA1B,EAArB;AAAmE;AACjF,aATD;AAUH,SAXD;AAaH,KAfD,MAeO;AACH;AACAlB,YAAIgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAED,QAAQ,KAAV,EAAiBE,SAAS,cAA1B,EAArB;AACH;AACJ;;AAGDrB,OAAOuB,GAAP,CAAW,GAAX,EAAgB,UAACrB,GAAD,EAAMC,GAAN,EAAY;AACxBA,QAAIiB,IAAJ,CAAS,EAACD,QAAQ,IAAT,EAAT;AACH,CAFD;;kBAIenB,M","file":"routes.js","sourcesContent":["import express from 'express';\nimport controllers from './../controllers';\nimport jwt from 'jsonwebtoken';\nimport db from '../models';\n\nconst routes = express();\n\nfunction verifyToken (req, res, next){\n    //GET THE AUTH HEADER VALUE\n    const bearerHeader = req.headers['authorization'];\n    //check if bearer is undefined\n    if (typeof bearerHeader !== 'undefined') {\n        //verify jwt\n        jwt.verify(bearerHeader, process.env.SECRET_KEY, (err, data)=>{\n            db.User.findById(data.user).then((user)=>{\n                if (user) {\n                    req.user = data.user   ; \n                    next();             \n                }else{\n                    res.status(403).json({ status: false, message: 'Unauthorized' });\n                }\n            }).catch((err)=>{\n                if (err) { res.status(403).json({ status: false, message: 'Unauthorized' }); }\n            });\n        });\n        \n    } else {\n        //forbiden\n        res.status(403).json({ status: false, message: 'Unauthorized' });\n    }\n}\n\n\nroutes.get('/', (req, res)=>{\n    res.json({status: true});\n});\n\nexport default routes;"]}